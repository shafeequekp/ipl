# Generated by Django 3.2.13 on 2022-05-15 17:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=63)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=127, populate_from='name', unique=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.ImageField(blank=True, max_length=255, null=True, upload_to='')),
                ('win_count', models.IntegerField(default=0)),
                ('toss_won', models.IntegerField(default=0)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Umpire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Modified')),
                ('first_name', models.CharField(max_length=127)),
                ('last_name', models.CharField(max_length=127)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=255, populate_from='first_name', unique=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.city')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=63)),
                ('highest_score', models.IntegerField(default=0)),
                ('highest_wicket', models.IntegerField(default=0)),
                ('champion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='champion', to='match.team')),
                ('runner_up', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='runner_up', to='match.team')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Modified')),
                ('first_name', models.CharField(max_length=127)),
                ('last_name', models.CharField(max_length=127)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=255, populate_from='first_name', unique=True)),
                ('profile_image', models.ImageField(blank=True, max_length=255, null=True, upload_to='')),
                ('total_matches', models.IntegerField(default=0)),
                ('total_runs', models.IntegerField(default=0)),
                ('fifties', models.IntegerField(default=0)),
                ('hundreds', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
                ('catches', models.IntegerField(default=0)),
                ('player_of_the_match', models.IntegerField(default=0)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.team')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Modified')),
                ('match_date', models.DateField()),
                ('match_id', models.IntegerField(unique=True)),
                ('toss_decision', models.CharField(choices=[('b', 'Bat'), ('f', 'Field')], max_length=1)),
                ('result', models.CharField(choices=[('n', 'Normal'), ('t', 'Tie'), ('nr', 'No Result')], max_length=2)),
                ('dl_applied', models.BooleanField(default=False)),
                ('win_by_runs', models.IntegerField(default=0)),
                ('win_by_wickets', models.IntegerField(default=0)),
                ('match_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_winner', to='match.team')),
                ('player_of_the_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_match', to='match.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.season')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='match.team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='match.team')),
                ('toss_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toss_winner', to='match.team')),
                ('umpire1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='umpire1', to='match.umpire')),
                ('umpire2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='umpire2', to='match.umpire')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.venue')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Modified')),
                ('innings', models.CharField(choices=[('1', '1'), ('2', '2')], max_length=1)),
                ('over', models.IntegerField(validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(1)])),
                ('ball', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('is_super_over', models.BooleanField(default=False)),
                ('wide_runs', models.IntegerField(default=0)),
                ('bye_runs', models.IntegerField(default=0)),
                ('leg_bye_runs', models.IntegerField(default=0)),
                ('no_ball_runs', models.IntegerField(default=0)),
                ('penalty_runs', models.IntegerField(default=0)),
                ('batsman_runs', models.IntegerField(default=0)),
                ('extra_runs', models.IntegerField(default=0)),
                ('total_runs', models.IntegerField(default=0)),
                ('dismissal_kind', models.CharField(blank=True, max_length=127, null=True)),
                ('batsman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batsman', to='match.player')),
                ('batting_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batting_team', to='match.team')),
                ('bowler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowler', to='match.player')),
                ('bowling_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowling_team', to='match.team')),
                ('fielder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fielder', to='match.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.match')),
                ('non_striker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_striker', to='match.player')),
                ('player_dismissed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_dismissed', to='match.player')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
